/* Basic styling for the Idle Infinity Game */
body {
    font-family: sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 50px;
    background-color: #f0f0f0;
}

#stats {
    margin-bottom: 20px;
    padding: 15px;
    border: 1px solid #ccc;
    background-color: #fff;
    border-radius: 5px;
    min-height: 40px;
    width: 100%; /* Make stats bar take more width */
    max-width: 600px; /* But not too wide */
    box-sizing: border-box; /* Include padding and border in the element's total width and height */
}

#total-boost-formula-display {
    font-size: 1.1em;
    margin: 15px auto; /* Added more top/bottom margin, auto for horizontal centering */
    padding: 10px;
    text-align: center;
    background-color: #fff; /* Similar to stats */
    border: 1px solid #ccc; /* Similar to stats */
    border-radius: 5px;   /* Similar to stats */
    max-width: 600px;     /* Consistent with stats */
    box-sizing: border-box;
    overflow-wrap: break-word; /* Allow wrapping if the formula gets very long */
    min-height: 1.5em; /* Ensure it has some height even when empty initially */
    line-height: 1.4;  /* Improve readability of multi-line formula */
}

#stats p {
    margin: 8px 0;
    text-align: center; /* Explicitly center the paragraph content */
}

#cash {
    font-weight: bold;
    color: #2c3e50; /* Example: Dark blue/grey for cash */
}

#prestige-points-display {
    font-weight: bold;
    color: #e67e22; /* Example: Carrot color */
    margin-left: 10px; /* Space after the pipe separator */
}

#reset-boost-display {
    font-weight: bold;
    color: #f4a261; /* An orange/sandy color for reset boost */
    margin-left: 5px;
}

#income-per-second-display {
    font-weight: bold;
    color: #264653; /* A dark blue/cyan for income rate */
}

#buy-amount-selector {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 10px 0;
    margin-top: 15px; /* Added for consistent spacing */
    margin-bottom: 15px;
    background-color: #e9e9e9;
    border-radius: 5px;
    width: fit-content;
    margin-left: auto;
    margin-right: auto;
}
#buy-amount-selector span {
    margin-left: 15px;
    margin-right: 10px;
    font-weight: bold;
}
#buy-amount-selector input[type="radio"] {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    position: absolute;
    left: -9999px;
}
#buy-amount-selector label {
    margin: 0;
    padding: 8px 12px;
    border: 1px solid #ccc;
    border-right-width: 0;
    border-radius: 0;
    background-color: #f8f9fa;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out;
    display: inline-block;
    font-size: 0.9em;
    color: #333;
}
#buy-amount-selector label[for="buy1"] {
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;
    margin-left: 0;
}
#buy-amount-selector label[for="buyMAX"] {
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
    border-right-width: 1px;
    margin-right: 15px;
}
#buy-amount-selector label:hover {
    background-color: #e9ecef;
    border-color: #bbb;
}
#buy-amount-selector label[for="buyMAX"]:hover {
    border-right-color: #bbb;
}
#buy-amount-selector input[type="radio"]:checked + label {
    background-color: #007bff;
    color: white;
    border-color: #0056b3;
}
#buy-amount-selector input[type="radio"]#buyMAX:checked + label[for="buyMAX"] {
    border-right-color: #0056b3;
}
#buy-amount-selector input[type="radio"]:checked + label:not([for="buyMAX"]) {
    border-right-width: 0;
}

#reset-container {
    height: 0;
    overflow: hidden;
    transition: height 0.5s ease-in-out;
    text-align: center;
    padding: 0px 20px;
    margin-top: 15px;
    margin-bottom: 15px;
    box-sizing: border-box;
    width: 100%;
    max-width: 600px;
}
#milestone-message h2 {
    color: #27ae60;
    font-size: 1.8em;
    margin-top: 10px;
    margin-bottom: 15px;
}
#reset-button {
    padding: 12px 25px;
    font-size: 1.1em;
    color: white;
    background-color: #c0392b;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
    margin-bottom: 10px;
}
#reset-button:hover {
    background-color: #a93226;
}

/* Options UI Styles */
#options-button {
    position: fixed;
    top: 10px;
    right: 10px;
    background-color: #555;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    z-index: 1001;

    padding: 0;
    font-size: 1.8em;
    width: 44px;
    height: 44px;
    line-height: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    text-decoration: none;
}
#options-button:hover {
    background-color: #333;
}

#options-panel {
    position: fixed;
    top: 0;
    right: 0;
    height: 100vh;
    width: 480px;
    max-width: 80vw;
    background-color: #f0f0f0;
    padding: 20px;
    z-index: 1000;
    display: block;
    box-sizing: border-box;
    overflow-y: auto;

    transform: translateX(100%);
    transition: transform 0.3s ease-in-out;

    border: none;
    border-left: 1px solid #ccc;
    border-radius: 0;
    border-top-left-radius: 8px;
    border-bottom-left-radius: 8px;
    box-shadow: -3px 0 8px rgba(0,0,0,0.15);
}
#options-panel.open {
    transform: translateX(0%);
}
#options-panel h2 {
    text-align: center;
    margin-top: 0;
    margin-bottom: 20px;
    color: #333;
}

#number-format-selector {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 20px;
}
#number-format-selector span {
    margin-right: 10px;
    font-weight: bold;
}
#number-format-selector input[type="radio"] {
    appearance: none; -webkit-appearance: none; -moz-appearance: none;
    position: absolute; left: -9999px;
}
#number-format-selector label {
    margin: 0;
    padding: 8px 12px;
    border: 1px solid #ccc;
    border-right-width: 0;
    border-radius: 0;
    background-color: #f8f9fa;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out;
    display: inline-block;
    font-size: 0.9em;
    color: #333;
}
#number-format-selector label:hover {
    background-color: #e9ecef;
    border-color: #bbb;
}
#number-format-selector label[for="formatStandard"] {
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;
}
#number-format-selector label[for="formatScientific"] {
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
    border-right-width: 1px;
}
#number-format-selector label[for="formatScientific"]:hover {
     border-right-color: #bbb;
}
#number-format-selector input[type="radio"]:checked + label {
    background-color: #007bff;
    color: white;
    border-color: #0056b3;
}
#number-format-selector input[type="radio"]#formatScientific:checked + label[for="formatScientific"] {
    border-right-color: #0056b3;
}
#number-format-selector input[type="radio"]:checked + label:not([for="formatScientific"]) {
    border-right-width: 0;
}

#close-options-button { /* This button was removed from HTML, rule can be removed later */
    display: block;
    padding: 10px 20px;
    background-color: #6c757d;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin: 20px auto 0 auto;
}
#close-options-button:hover { /* This button was removed from HTML, rule can be removed later */
    background-color: #5a6268;
}

/* End of Options UI Styles */


#actions {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    padding: 10px;
    max-width: 1260px;
    margin: 0 auto;
}

.generator-action-row {
    display: flex;
    align-items: center;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    flex: 0 0 380px;
    margin: 10px;
    background-color: #fff;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    visibility: hidden;
}

.generator-info {
    flex-basis: 60%;
    padding-right: 10px;
}

.generator-name {
    display: block;
    font-weight: bold;
}

.generator-level {
    display: block;
    font-size: 0.9em;
    color: #555;
}

.generator-boost-display {
    display: block; /* To appear on a new line below level */
    font-size: 0.85em;
    color: #2a9d8f; /* A teal/greenish color for boost */
    margin-top: 3px; /* Little space from the level display */
}

.time-to-buy {
    color: grey;
    font-size: 0.8em; /* Slightly smaller for the sub-line */
    display: inline-block; /* To allow min-height and consistent line flow */
    min-height: 1em; /* Attempt to reserve space even if empty */
    line-height: 1.2; /* Specific line-height for this span if needed */
}

button { /* This is the general rule for generator buy buttons */
    padding: 10px;
    margin: 0;
    border: none;
    border-radius: 5px;
    color: white;
    cursor: pointer;
    height: auto;
    line-height: 1.3;
    text-align: center;
    flex-basis: 40%;
    background-color: #cccccc;
    opacity: 0.7;
    transition: background-color 0.2s ease-in-out, opacity 0.2s ease-in-out;
}

button.can-buy {
    background-color: var(--gen-button-bg-color, #007bff); /* Use CSS custom property with a fallback */
    opacity: 1;
}

button.can-buy:hover {
    /* For hover, we might want to darken the custom property.
       However, CSS doesn't have a standard way to darken a var() color directly.
       A common approach is to use a semi-transparent black overlay or define a separate hover color property.
       For now, let's keep it simple and use a fixed darker shade or remove the specific hover background change
       if the themeColor itself should be the primary source of color.
       Given the existing structure, we'll use a slightly darker version of the fallback for now,
       or ideally, this would also be handled by a second CSS variable if per-generator hover colors are desired.
       Let's assume for now that a generic darken effect on hover is acceptable or that the theme color doesn't change on hover.
       To keep it consistent with the previous behavior of a specific hover color, let's use a fixed one.
       A better long-term solution might involve JavaScript to calculate and set a --gen-button-hover-bg-color.
       For this step, we'll just ensure the var is used for the base state.
       If we want the hover to be a darker version of the theme color, that's a more complex change.
       Let's make it slightly darker than the fallback, similar to original behavior.
       Or, more simply, let the hover state not change the background-color if it's themed.
       Let's try removing the specific background-color change on hover for themed buttons,
       allowing the theme color to persist, and only applying a filter or transform for feedback.
       For now, to match the task, only the base `can-buy` state is the focus for `var()`.
       The hover effect can be a generic one or removed if it conflicts with theming.
       Let's try using filter for hover to not override the themeColor.
    */
    filter: brightness(85%); /* Example: darken the button on hover */
    /* background-color: #0056b3; */ /* Remove direct color setting if theme is applied */
}

#win-message { /* This ID is no longer used, milestone-message is */
    color: green;
    font-weight: bold;
}
